@charset "UTF-8";
#Accordion1 {
	border: 1px solid #315798;
	background-color: #eee;
}
/* SpryAccordion.css - version 0.5 - Spry Pre-Release 1.6.1 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */

/* This is the selector for the main Accordion container. For our default style,
 * we draw borders on the left, right, and bottom. The top border of the Accordion
 * will be rendered by the first AccordionPanelTab which never moves.
 *
 * If you want to constrain the width of the Accordion widget, set a width on
 * the Accordion container. By default, our accordion expands horizontally to fill
 * up available space.
 *
 * The name of the class ("Accordion") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style the
 * Accordion container.
 */
.Accordion {
	/*border-left: solid 1px gray;
	border-right: solid 1px black;
	border-bottom: solid 1px gray;*/
	overflow: hidden;
	width:471px;
	height: 415px;
}
.Accordion h2 {
	margin:0;
	padding: 10px 0 10px 15px;
}

/* This is the selector for the AccordionPanel container which houses the
 * panel tab and a panel content area. It doesn't render visually, but we
 * make sure that it has zero margin and padding.
 *
 * The name of the class ("AccordionPanel") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion panel container.
*/
.AccordionPanel {
	margin: 0px;
	padding: 0px;
	background-color: #fff;
}

/* This is the selector for the AccordionPanelTab. This container houses
 * the title for the panel. This is also the container that the user clicks
 * on to open a specific panel.
 *
 * The name of the class ("AccordionPanelTab") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion panel tab container.
 *
 * NOTE:
 * This rule uses -moz-user-select and -khtml-user-select properties to prevent the
 * user from selecting the text in the AccordionPanelTab. These are proprietary browser
 * properties that only work in Mozilla based browsers (like FireFox) and KHTML based
 * browsers (like Safari), so they will not pass W3C validation. If you want your documents to
 * validate, and don't care if the user can select the text within an AccordionPanelTab,
 * you can safely remove those properties without affecting the functionality of the widget.
 */
.AccordionPanelTab {
	background-color: #eee;
	/*border-top: solid 1px black;
	border-bottom: solid 1px gray;*/
	margin: 0px;
	padding: 2px;
	color:#315798;
	/*cursor: pointer;
	-moz-user-select: none;
	-khtml-user-select: none;
	border-top: 1px solid #335185;*/
}

/* This is the selector for a Panel's Content area. It's important to note that
 * you should never put any padding on the panel's content area if you plan to
 * use the Accordions panel animations. Placing a non-zero padding on the content
 * area can cause the accordion to abruptly grow in height while the panels animate.
 *
 * Anyone who styles an Accordion *MUST* specify a height on the Accordion Panel
 * Content container.
 *
 * The name of the class ("AccordionPanelContent") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion panel content container.
 */
.AccordionPanelContent {
	overflow: auto;
	margin: 0px;
	padding: 5px 15px 5px 15px;
	height: 300px; /* adjust content height */
	color:#000;
}
.AccordionPanelContent p {
	font-size:0.75em;
	padding-bottom:10px;
}
.AccordionPanelContent p a:link {
	
}
.AccordionPanelContent p a:visited {
	color: #0e7cd4;
}
.AccordionPanelContent p a:hover {
	text-decoration:underline;
}
.AccordionPanelContent .viewAll {
	margin-top:15px;
}
.AccordionPanelContent .viewAll a:link {
	font-size:0.9em;
	/*padding-bottom:10px;*/
	font-weight: bold;
	color: #fff;
}
.AccordionPanelContent .viewAll a:visited {
	color: #fff;
}
.AccordionPanelContent .viewAll a:hover {
	color: #fff;
	background-color:#69F;
}
.AccordionPanelContent .rounded-corners { /*not working in IE*/
	background: #0076d5;
	-moz-border-radius: 10px;
	-webkit-border-radius: 10px;
	-khtml-border-radius: 10px;
	border-radius: 10px;
	padding: 5px 30px;
}
.AccordionPanelContent ul {
	font-size:0.75em;
	margin: 0 20px 10px 20px;
}
.AccordionPanelContent li {
	margin-bottom:10px;
}
.AccordionPanelContent li a:link {
	color: #0e7cd4;
}
.AccordionPanelContent li a:visited {
	color: #0e7cd4;
}
.AccordionPanelContent li a:hover {
	text-decoration:underline;
}

/* This is an example of how to change the appearance of the panel tab that is
 * currently open. The class "AccordionPanelOpen" is programatically added and removed
 * from panels as the user clicks on the tabs within the Accordion.
 */
.AccordionPanelOpen .AccordionPanelTab {
	background-color: #fff;
	/*border-bottom: 1px solid #335185;*/
}

/* This is an example of how to change the appearance of the panel tab as the
 * mouse hovers over it. The class "AccordionPanelTabHover" is programatically added
 * and removed from panel tab containers as the mouse enters and exits the tab container.
 */
.AccordionPanelTabHover {
	color: #0e7cd4;
	text-decoration:underline;
}
.AccordionPanelOpen .AccordionPanelTabHover {
	color: #0e7cd4;
	text-decoration:underline;
}

/* This is an example of how to change the appearance of all the panel tabs when the
 * Accordion has focus. The "AccordionFocused" class is programatically added and removed
 * whenever the Accordion gains or loses keyboard focus.
 */
.AccordionFocused .AccordionPanelTab {
	background-color: #bccff0;
}

/* This is an example of how to change the appearance of the panel tab that is
 * currently open when the Accordion has focus.
 */
.AccordionFocused .AccordionPanelOpen .AccordionPanelTab {
	background-color: #fff;
}

.AccordionPanelContent a:link {
	text-decoration:none;
}
/* Rules for Printing */

@media print {

  .Accordion {
  overflow: visible !important;
  }
  
  .AccordionPanelContent {
  display: block !important;
  overflow: visible !important;
  height: auto !important;
  }
}